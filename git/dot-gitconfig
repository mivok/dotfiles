[user]
	name = Mark Harrison
	email = mark@mharrison.org

[alias]
	st = status
	ci = commit
	unstage = reset HEAD
	me = log --author="mark" --after=yesterday --no-merges --format=%s --reverse
	cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|main\\|develop' | xargs -n 1 git branch -d"
	track = "!git branch --set-upstream-to=origin/$(git symbolic-ref --short HEAD)"
	up = pull --rebase --autostash
	# From https://github.com/not-an-aardvark/git-delete-squashed
	delete-squashed = "!git checkout -q master && git for-each-ref refs/heads/ '--format=%(refname:short)' | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse $branch\\^{tree}) -p $mergeBase -m _)) == '-'* ]] && git branch -D $branch; done"
	delete-squashed-main = "!git checkout -q main && git for-each-ref refs/heads/ '--format=%(refname:short)' | while read branch; do mergeBase=$(git merge-base main $branch) && [[ $(git cherry main $(git commit-tree $(git rev-parse $branch\\^{tree}) -p $mergeBase -m _)) == '-'* ]] && git branch -D $branch; done"
	deploy-tag = "!git tag deploy/${1:-prod}/$(git rev-parse --short HEAD) && git --no-pager tag -l deploy/${1:-prod}/$(git rev-parse --short HEAD) #"
	switch-to-main = !git branch -m master main && git fetch origin && git branch -u origin/main main && git branch -dr origin/master && git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main
	browse-pr = "!gh api \"repos/{owner}/{repo}/commits/$(git rev-parse HEAD)/pulls\" | jq -r '.[].number' | xargs gh browse"
	switch-to-ssh = "!git remote set-url origin $(git remote get-url origin | sed 's+https://github.com/+git@github.com:+') && git remote -v"

[color]
	ui = auto

[commit]
	template = ~/.gitmessage

[core]
	excludesfile = ~/.gitignore_global

[diff]
	wsErrorHighlight = all

[diff "gpg"]
	binary = true
	textconv = gpg2 -d --quiet --yes --compress-algo=none --batch --use-agent

[includeIf "gitdir:~/git/work/"]
	path = .gitconfig_work

[init]
	defaultBranch = main

[push]
	default = current

[pull]
	rebase = true

[rebase]
	autoStash = true

[url "git@github.com:"]
	insteadOf = gh:

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
